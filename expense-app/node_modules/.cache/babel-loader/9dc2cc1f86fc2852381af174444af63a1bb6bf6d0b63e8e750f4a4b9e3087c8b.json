{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derek\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\expense-app\\\\expense-app\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./ExpenseForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === \"\";\nconst ExpenseForm = props => {\n  _s();\n  const [enteredName, setenteredName] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const enteredNameRef = useRef();\n  const enteredAmountRef = useRef();\n  const titleChangeHandler = event => {\n    setenteredName(event.target.value);\n  };\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredNameValue = enteredNameRef.current.value;\n    const enteredAmountValue = enteredAmountRef.current.value;\n    const enteredDateValue = new Date(enteredDate);\n    const enteredNameIsValid = !isEmpty(enteredNameValue);\n    const enteredAmountIsValid = !isEmpty(enteredAmountValue) && +enteredAmount > 0;\n    const enteredDateIsValid = enteredDateValue === \"Invalid Date\";\n    console.log(enteredAmountValue, enteredNameValue, enteredDateValue);\n    console.log(enteredAmountIsValid, enteredNameIsValid, enteredDateIsValid);\n    const formIsValid = enteredNameIsValid && enteredAmountIsValid && enteredDateIsValid;\n    if (!formIsValid) {\n      console.log(\"not valud\");\n      return;\n    }\n    const expenseData = {\n      title: enteredName,\n      amount: +enteredAmount,\n      date: new Date(enteredDate)\n    };\n    saveExpenseDataHandler(expenseData);\n    setenteredName(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    props.onCancel();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onCancel: props.onCancel,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: enteredName,\n            onChange: titleChangeHandler,\n            ref: enteredNameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            value: enteredAmount,\n            onChange: amountChangeHandler,\n            ref: enteredAmountRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2022-01-01\",\n            max: \"2024-12-31\",\n            value: enteredDate,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"j+8I9iiZgo07qYqupkmnk5AzqiY=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","useRef","Modal","classes","isEmpty","value","trim","ExpenseForm","props","enteredName","setenteredName","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","enteredNameRef","enteredAmountRef","titleChangeHandler","event","target","amountChangeHandler","dateChangeHandler","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","submitHandler","preventDefault","enteredNameValue","current","enteredAmountValue","enteredDateValue","Date","enteredNameIsValid","enteredAmountIsValid","enteredDateIsValid","console","log","formIsValid","title","amount","date","onCancel","control","actions"],"sources":["C:/Users/derek/OneDrive/Desktop/React-Projects/expense-app/expense-app/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\n\r\nimport classes from \"./ExpenseForm.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredName, setenteredName] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const enteredNameRef = useRef();\r\n  const enteredAmountRef = useRef();\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setenteredName(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredNameValue = enteredNameRef.current.value;\r\n    const enteredAmountValue = enteredAmountRef.current.value;\r\n    const enteredDateValue = new Date(enteredDate);\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredNameValue);\r\n    const enteredAmountIsValid = !isEmpty(enteredAmountValue) && +enteredAmount > 0;\r\n    const enteredDateIsValid = enteredDateValue === \"Invalid Date\";\r\n\r\n    console.log(enteredAmountValue, enteredNameValue, enteredDateValue);\r\n    console.log(enteredAmountIsValid, enteredNameIsValid, enteredDateIsValid);\r\n\r\n    const formIsValid = (enteredNameIsValid && enteredAmountIsValid && enteredDateIsValid);\r\n\r\n    if (!formIsValid) {\r\n      console.log(\"not valud\");\r\n      return;\r\n    }\r\n\r\n    const expenseData = {\r\n      title: enteredName,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    saveExpenseDataHandler(expenseData);\r\n    setenteredName(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    props.onCancel();\r\n  };\r\n\r\n  return (\r\n    <Modal onCancel={props.onCancel}>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className={classes.control}>\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredName}\r\n              onChange={titleChangeHandler}\r\n              ref={enteredNameRef}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              value={enteredAmount}\r\n              onChange={amountChangeHandler}\r\n              ref={enteredAmountRef}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2022-01-01\"\r\n              max=\"2024-12-31\"\r\n              value={enteredDate}\r\n              onChange={dateChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type=\"button\" onClick={props.onCancel}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}