{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derek\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\expense-app\\\\expense-app\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./ExpenseForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === \"\";\nconst ExpenseForm = props => {\n  _s();\n  const [enteredName, setenteredName] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    amount: true,\n    date: true\n  });\n  const enteredNameRef = useRef();\n  const enteredAmountRef = useRef();\n  const titleChangeHandler = event => {\n    setenteredName(event.target.value);\n  };\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredNameValue = enteredNameRef.current.value;\n    const enteredAmountValue = enteredAmountRef.current.value;\n    const enteredDateValue = new Date(enteredDate);\n    const enteredNameIsValid = !isEmpty(enteredNameValue);\n    const enteredAmountIsValid = !isEmpty(enteredAmountValue) && +enteredAmount > 0;\n    const enteredDateIsValid = enteredDateValue.toString() !== \"Invalid Date\";\n    setFormValidity({\n      name: enteredNameIsValid,\n      amount: enteredAmountIsValid,\n      date: enteredDateIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredAmountIsValid && enteredDateIsValid;\n    if (!formIsValid) {\n      console.log(\"not valud\");\n      return;\n    }\n    const expenseData = {\n      title: enteredName,\n      amount: +enteredAmount,\n      date: new Date(enteredDate)\n    };\n    saveExpenseDataHandler(expenseData);\n    setenteredName(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    props.onCancel();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onCancel: props.onCancel,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} ${formValidity.name ? \"\" : classes.invalid}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: enteredName,\n            onChange: titleChangeHandler,\n            ref: enteredNameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.invalid,\n            children: \"Please enter a valid name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} ${formValidity.amount ? \"\" : classes.invalid}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            value: enteredAmount,\n            onChange: amountChangeHandler,\n            ref: enteredAmountRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), !formValidity.amount && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.invalid,\n            children: \"Please enter a valid amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.control} ${formValidity.date ? \"\" : classes.invalid}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2022-01-01\",\n            max: \"2024-12-31\",\n            value: enteredDate,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), !formValidity.date && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter a valid date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"ScE6Q8PvDMT9z4zcVQ36nMhkRRE=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","useRef","Modal","classes","isEmpty","value","trim","ExpenseForm","props","enteredName","setenteredName","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","formValidity","setFormValidity","name","amount","date","enteredNameRef","enteredAmountRef","titleChangeHandler","event","target","amountChangeHandler","dateChangeHandler","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","submitHandler","preventDefault","enteredNameValue","current","enteredAmountValue","enteredDateValue","Date","enteredNameIsValid","enteredAmountIsValid","enteredDateIsValid","formIsValid","console","log","title","onCancel","control","invalid","actions"],"sources":["C:/Users/derek/OneDrive/Desktop/React-Projects/expense-app/expense-app/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\n\r\nimport classes from \"./ExpenseForm.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredName, setenteredName] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [formValidity, setFormValidity] = useState({\r\n    name: true,\r\n    amount: true,\r\n    date: true,\r\n  });\r\n\r\n  const enteredNameRef = useRef();\r\n  const enteredAmountRef = useRef();\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setenteredName(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredNameValue = enteredNameRef.current.value;\r\n    const enteredAmountValue = enteredAmountRef.current.value;\r\n    const enteredDateValue = new Date(enteredDate);\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredNameValue);\r\n    const enteredAmountIsValid =\r\n      !isEmpty(enteredAmountValue) && +enteredAmount > 0;\r\n    const enteredDateIsValid = enteredDateValue.toString() !== \"Invalid Date\";\r\n\r\n    setFormValidity({\r\n      name: enteredNameIsValid,\r\n      amount: enteredAmountIsValid,\r\n      date: enteredDateIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid && enteredAmountIsValid && enteredDateIsValid;\r\n\r\n    if (!formIsValid) {\r\n      console.log(\"not valud\");\r\n      return;\r\n    }\r\n\r\n    const expenseData = {\r\n      title: enteredName,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    saveExpenseDataHandler(expenseData);\r\n    setenteredName(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    props.onCancel();\r\n  };\r\n\r\n  return (\r\n    <Modal onCancel={props.onCancel}>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div\r\n            className={`${classes.control} ${\r\n              formValidity.name ? \"\" : classes.invalid\r\n            }`}\r\n          >\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredName}\r\n              onChange={titleChangeHandler}\r\n              ref={enteredNameRef}\r\n            />\r\n            {!formValidity.name && <p className={classes.invalid}>Please enter a valid name</p>}\r\n          </div>\r\n          <div className={`${classes.control} ${\r\n              formValidity.amount ? \"\" : classes.invalid\r\n            }`}>\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              value={enteredAmount}\r\n              onChange={amountChangeHandler}\r\n              ref={enteredAmountRef}\r\n            />\r\n            {!formValidity.amount && <p className={classes.invalid}>Please enter a valid amount</p>}\r\n          </div>\r\n          <div className={`${classes.control} ${\r\n              formValidity.date ? \"\" : classes.invalid\r\n            }`}>\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2022-01-01\"\r\n              max=\"2024-12-31\"\r\n              value={enteredDate}\r\n              onChange={dateChangeHandler}\r\n            />\r\n            {!formValidity.date && <p>Please enter a valid date</p>}\r\n          </div>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type=\"button\" onClick={props.onCancel}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}