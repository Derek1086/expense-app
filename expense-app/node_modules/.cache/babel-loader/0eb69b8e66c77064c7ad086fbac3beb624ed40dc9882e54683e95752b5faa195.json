{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derek\\\\OneDrive\\\\Desktop\\\\React-Projects\\\\expense-app\\\\expense-app\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport ExpenseForm from \"../NewExpense/ExpenseForm\";\nimport NewExpense from \"../NewExpense/NewExpense\";\nimport classes from \"./Expenses.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_EXPENSES = [{\n  id: \"e1\",\n  title: \"Toilet Paper\",\n  amount: 94.12,\n  date: new Date(2022, 1, 14)\n}, {\n  id: \"e2\",\n  title: \"New TV\",\n  amount: 799.49,\n  date: new Date(2023, 2, 12)\n}, {\n  id: \"e3\",\n  title: \"Car Insurance\",\n  amount: 294.67,\n  date: new Date(2022, 2, 28)\n}, {\n  id: \"e4\",\n  title: \"New Desk (Wooden)\",\n  amount: 450,\n  date: new Date(2023, 5, 12)\n}];\nconst Expenses = props => {\n  _s();\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n  const [formIsShown, setFormIsShown] = useState(false);\n  const showFormHandler = () => {\n    setFormIsShown(true);\n  };\n  const hideFormHandler = () => {\n    setFormIsShown(false);\n  };\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\n  const [filteredMonth, setFilteredMonth] = useState(\"Jan\");\n  const filterChangeHandlerYear = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filterChangeHandlerMonth = selectedMonth => {\n    setFilteredMonth(selectedMonth);\n  };\n  const filteredExpenses = expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  const deleteItemHandler = expenseId => {\n    setExpenses(prevExpense => {\n      const updatedExpenses = prevExpense.filter(expense => expense.id !== expenseId);\n      return updatedExpenses;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [formIsShown && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onAddExpense: addExpenseHandler,\n      onCancel: hideFormHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.expenses,\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selectedMonth: filteredMonth,\n        selectedYear: filteredYear,\n        onChangeFilterYear: filterChangeHandlerYear,\n        onChangeFilterMonth: filterChangeHandlerMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expenses: filteredExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n        items: filteredExpenses,\n        month: filteredMonth,\n        year: filteredYear,\n        onDeleteItem: deleteItemHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewExpense, {\n        onShowForm: showFormHandler,\n        onHideForm: hideFormHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"YdTGC5rcDsMiLYDwa39w+GhFjwM=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpensesFilter","ExpensesList","ExpensesChart","ExpenseForm","NewExpense","classes","INITIAL_EXPENSES","id","title","amount","date","Date","Expenses","props","expenses","setExpenses","formIsShown","setFormIsShown","showFormHandler","hideFormHandler","filteredYear","setFilteredYear","filteredMonth","setFilteredMonth","filterChangeHandlerYear","selectedYear","filterChangeHandlerMonth","selectedMonth","filteredExpenses","filter","expense","getFullYear","toString","addExpenseHandler","prevExpenses","deleteItemHandler","expenseId","prevExpense","updatedExpenses"],"sources":["C:/Users/derek/OneDrive/Desktop/React-Projects/expense-app/expense-app/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpenseForm from \"../NewExpense/ExpenseForm\";\r\nimport NewExpense from \"../NewExpense/NewExpense\";\r\n\r\nimport classes from \"./Expenses.module.css\";\r\n\r\nconst INITIAL_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2022, 1, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2023, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2022, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2023, 5, 12),\r\n  },\r\n];\r\n\r\nconst Expenses = (props) => {\r\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\r\n\r\n  const [formIsShown, setFormIsShown] = useState(false);\r\n\r\n  const showFormHandler = () => {\r\n    setFormIsShown(true);\r\n  };\r\n\r\n  const hideFormHandler = () => {\r\n    setFormIsShown(false);\r\n  };\r\n\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n  const [filteredMonth, setFilteredMonth] = useState(\"Jan\");\r\n\r\n  const filterChangeHandlerYear = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filterChangeHandlerMonth = (selectedMonth) => {\r\n    setFilteredMonth(selectedMonth);\r\n  };\r\n\r\n  const filteredExpenses = expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  const deleteItemHandler = (expenseId) => {\r\n    setExpenses((prevExpense) => {\r\n      const updatedExpenses = prevExpense.filter(\r\n        (expense) => expense.id !== expenseId\r\n      );\r\n      return updatedExpenses;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {formIsShown && (\r\n        <ExpenseForm\r\n          onAddExpense={addExpenseHandler}\r\n          onCancel={hideFormHandler}\r\n        />\r\n      )}\r\n      <Card className={classes.expenses}>\r\n        <ExpensesFilter\r\n          selectedMonth={filteredMonth}\r\n          selectedYear={filteredYear}\r\n          onChangeFilterYear={filterChangeHandlerYear}\r\n          onChangeFilterMonth={filterChangeHandlerMonth}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList\r\n          items={filteredExpenses}\r\n          month={filteredMonth}\r\n          year={filteredYear}\r\n          onDeleteItem={deleteItemHandler}\r\n        />\r\n        <NewExpense onShowForm={showFormHandler} onHideForm={hideFormHandler} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}